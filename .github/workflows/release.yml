---
name: Create Release

on:
  push:
    tags:
    - v*

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '22'
    - name: Setup Just
      uses: extractions/setup-just@v3

    - name: Get version from tag
      id: get_version
      run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT

    - name: Install dependencies and build
      run: |
        just install
        just build

    - name: Generate changelog
      id: changelog
      run: |
        {
          echo "## üöÄ AIÊèêÁ§∫ËØçÁÆ°ÁêÜÂô® v${{ steps.get_version.outputs.VERSION }}"
          echo ""
          echo "### ‚ú® Êñ∞ÂäüËÉΩ"
          echo "- ËØ∑Âú®Ê≠§Â§ÑÊ∑ªÂä†Êñ∞ÂäüËÉΩËØ¥Êòé"
          echo ""
          echo "### üêõ ‰øÆÂ§ç"
          echo "- ËØ∑Âú®Ê≠§Â§ÑÊ∑ªÂä†‰øÆÂ§çËØ¥Êòé"
          echo ""
          echo "### üì¶ ÂÆâË£ÖÊñπÊ≥ï"
          echo ""
          echo "#### ÊñπÊ≥ï1: Áõ¥Êé•ÂÆâË£ÖCRXÊñá‰ª∂"
          echo "1. ‰∏ãËΩΩ \`prompt-manager-v${{ steps.get_version.outputs.VERSION }}.crx\` Êñá‰ª∂"
          echo "2. ÊâìÂºÄ Chrome Êâ©Â±ïÁÆ°ÁêÜÈ°µÈù¢ \`chrome://extensions/\`"
          echo "3. ÂºÄÂêØÂºÄÂèëËÄÖÊ®°Âºè"
          echo "4. ÊãñÊãΩ \`.crx\` Êñá‰ª∂Âà∞È°µÈù¢ËøõË°åÂÆâË£Ö"
          echo ""
          echo "#### ÊñπÊ≥ï2: Ëß£ÂéãZIPÊñá‰ª∂ÂÆâË£Ö"
          echo "1. ‰∏ãËΩΩ \`prompt-manager-v${{ steps.get_version.outputs.VERSION }}.zip\` Êñá‰ª∂"
          echo "2. Ëß£ÂéãÂà∞Êú¨Âú∞Êñá‰ª∂Â§π"
          echo "3. Âú®ChromeÊâ©Â±ïÁÆ°ÁêÜÈ°µÈù¢ÁÇπÂáª\"Âä†ËΩΩÂ∑≤Ëß£ÂéãÁöÑÊâ©Â±ïÁ®ãÂ∫è\""
          echo "4. ÈÄâÊã©Ëß£ÂéãÂêéÁöÑÊñá‰ª∂Â§π"
          echo ""
          echo "### üîß ÊäÄÊúØ‰ø°ÊÅØ"
          echo "- Node.js: 22.x"
          echo "- Manifest Version: 3"
          echo "- ÊûÑÂª∫Êó∂Èó¥: $(date -u '+%Y-%m-%d %H:%M:%S UTC')"
        } > changelog.md

        echo "CHANGELOG<<EOF" >> $GITHUB_OUTPUT
        cat changelog.md >> $GITHUB_OUTPUT
        echo "EOF" >> $GITHUB_OUTPUT

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ steps.get_version.outputs.VERSION }}
        release_name: AIÊèêÁ§∫ËØçÁÆ°ÁêÜÂô® v${{ steps.get_version.outputs.VERSION }}
        body: ${{ steps.changelog.outputs.CHANGELOG }}
        draft: false
        prerelease: false

    - name: Upload CRX to Release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./prompt-manager-v${{ steps.get_version.outputs.VERSION }}.crx
        asset_name: prompt-manager-v${{ steps.get_version.outputs.VERSION }}.crx
        asset_content_type: application/x-chrome-extension

    - name: Upload ZIP to Release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./prompt-manager-v${{ steps.get_version.outputs.VERSION }}.zip
        asset_name: prompt-manager-v${{ steps.get_version.outputs.VERSION }}.zip
        asset_content_type: application/zip

    # https://developer.chrome.com/docs/webstore/using-api
    - name: Publish to Chrome Web Store
      id: publish-chrome-extension
      uses: puzzlers-labs/chrome-webstore-publish@v1
      with:
        mode: publish
        extension_id: ${{ vars.CHROME_EXTENSION_ID }}
        zip_file_path: ./prompt-manager-v${{ steps.get_version.outputs.VERSION }}.zip
        client_id: ${{ secrets.GOOGLE_CLIENT_ID }}
        client_secret: ${{ secrets.GOOGLE_CLIENT_SECRET }}
        refresh_token: ${{ secrets.GOOGLE_REFRESH_TOKEN }}
        publish_target: public
        expedited_review: true
        crx_private_key: ${{ secrets.CRX_PRIVATE_KEY }}
        # crx_private_key_path: ./path/to/key.pem

    - name: Log package artifact path
      run: |
        echo "Package artifact path: ${{ steps.publish-chrome-extension.outputs.package-artifact-path }}"
