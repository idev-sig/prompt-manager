name: Build Chrome Extension

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  release:
    types: [ created ]

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '22'
        cache: 'npm'
        
    - name: Install just
      run: |
        curl --proto '=https' --tlsv1.2 -sSf https://just.systems/install.sh | bash -s -- --to /usr/local/bin
        
    - name: Install dependencies and build
      run: |
        just install
        just build
        
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: chrome-extension-${{ github.sha }}
        path: |
          *.crx
          *.zip
        retention-days: 30
        
    - name: Get version for release
      if: github.event_name == 'release'
      id: get_version
      run: echo "version=$(node -p "require('./src/manifest.json').version")" >> $GITHUB_OUTPUT
        
    - name: Upload CRX to Release
      if: github.event_name == 'release'
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: ./prompt-manager-v${{ steps.get_version.outputs.version }}.crx
        asset_name: prompt-manager-v${{ steps.get_version.outputs.version }}.crx
        asset_content_type: application/x-chrome-extension
        
    - name: Upload ZIP to Release
      if: github.event_name == 'release'
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: ./prompt-manager-v${{ steps.get_version.outputs.version }}.zip
        asset_name: prompt-manager-v${{ steps.get_version.outputs.version }}.zip
        asset_content_type: application/zip
